// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String?  @unique
  email      String   @unique
  password   String
  avatar     String?
  Post       Post[]
  created_at DateTime @default(now())
}

model Post {
  id         String      @id @default(uuid())
  title      String
  price      Int
  imagesPost Image[]
  address    String
  city       String
  bedroom    Int
  bathroom   Int
  latitude   String
  longitude  String
  type       Type
  property   Property
  createdAt  DateTime    @default(now())
  userId     String
  // when user is deleted post also deleted
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  postDetail PostDetail?

  @@fulltext([city, address])
}

model Image {
  id     String @id @default(uuid())
  url    String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}

model PostDetail {
  id         String  @id @default(uuid())
  desc       String
  utilities  String?
  pet        String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?
  // when post is deleted postDetail also deleted
  post       Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     String  @unique
}
